<?php
// User management page for admin
?>

<div class="main-container" id="main-container">
    <div class="header-section">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="mb-2">User Management</h2>
                <p class="text-muted mb-0">Manage system users and their roles</p>
            </div>
            <div class="d-flex gap-2">
                <button class="btn btn-outline-primary" onclick="refreshUsers()">
                    <i class="fas fa-sync-alt"></i> Refresh
                </button>
                <button class="btn btn-primary" onclick="showAddUserModal()">
                    <i class="fas fa-plus"></i> Add User
                </button>
            </div>
        </div>
    </div>

    <div class="main-content">
        <!-- Filters -->
        <div class="filters-section mb-4">
            <div class="row g-3">
                <div class="col-md-3">
                    <select class="form-select" id="role-filter" onchange="filterUsers()">
                        <option value="">All Roles</option>
                        <option value="user">Business Owner</option>
                        <option value="supplier">Supplier</option>
                        <option value="courier">Courier</option>
                        <option value="admin">Admin</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select class="form-select" id="status-filter" onchange="filterUsers()">
                        <option value="">All Status</option>
                        <option value="1">Active</option>
                        <option value="0">Inactive</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <input type="text" class="form-control" id="search-input" placeholder="Search by name or email..." onkeyup="filterUsers()">
                </div>
                <div class="col-md-2">
                    <button class="btn btn-outline-secondary w-100" onclick="clearFilters()">
                        <i class="fas fa-times"></i> Clear
                    </button>
                </div>
            </div>
        </div>

        <!-- Users Table -->
        <div class="table-container">
            <div class="table-header">
                <h3>System Users</h3>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-success btn-sm" onclick="exportUsers('csv')">
                        <i class="fas fa-file-csv"></i> CSV
                    </button>
                    <button class="btn btn-outline-primary btn-sm" onclick="exportUsers('pdf')">
                        <i class="fas fa-file-pdf"></i> PDF
                    </button>
                </div>
            </div>
            <div class="table-wrapper">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>User ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Role</th>
                            <th>Status</th>
                            <th>Email Verified</th>
                            <th>Stores</th>
                            <th>Created</th>
                            <th>Last Activity</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="users-table-body">
                        <tr>
                            <td colspan="10" class="text-center">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Loading...</span>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pagination -->
        <nav aria-label="Users pagination" class="mt-4">
            <ul class="pagination justify-content-center" id="users-pagination">
                <!-- Pagination will be generated by JavaScript -->
            </ul>
        </nav>
    </div>
</div>

<!-- Add/Edit User Modal -->
<div class="modal fade" id="userModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userModalLabel">Add New User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="user-form">
                <div class="modal-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label for="first_name" class="form-label">First Name</label>
                            <input type="text" class="form-control" id="first_name" name="first_name" required>
                        </div>
                        <div class="col-md-6">
                            <label for="last_name" class="form-label">Last Name</label>
                            <input type="text" class="form-control" id="last_name" name="last_name" required>
                        </div>
                        <div class="col-md-6">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="email" name="email" required>
                        </div>
                        <div class="col-md-6">
                            <label for="phone_number" class="form-label">Phone Number</label>
                            <input type="tel" class="form-control" id="phone_number" name="phone_number">
                        </div>
                        <div class="col-md-6">
                            <label for="role" class="form-label">Role</label>
                            <select class="form-select" id="role" name="role" required>
                                <option value="">Select Role</option>
                                <option value="user">Business Owner</option>
                                <option value="supplier">Supplier</option>
                                <option value="courier">Courier</option>
                                <option value="admin">Admin</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="is_active" class="form-label">Status</label>
                            <select class="form-select" id="is_active" name="is_active">
                                <option value="1">Active</option>
                                <option value="0">Inactive</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="password" name="password" required>
                        </div>
                        <div class="col-md-6">
                            <label for="confirm_password" class="form-label">Confirm Password</label>
                            <input type="password" class="form-control" id="confirm_password" name="confirm_password" required>
                        </div>
                        <div class="col-md-6">
                            <label for="birth_date" class="form-label">Birth Date</label>
                            <input type="date" class="form-control" id="birth_date" name="birth_date">
                        </div>
                        <div class="col-md-6">
                            <label for="gender" class="form-label">Gender</label>
                            <select class="form-select" id="gender" name="gender">
                                <option value="male">Male</option>
                                <option value="female">Female</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="save-user-btn">Save User</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- User Details Modal -->
<div class="modal fade" id="userDetailsModal" tabindex="-1" aria-labelledby="userDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userDetailsModalLabel">User Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="user-details-content">
                <!-- User details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-warning" onclick="editUser()">Edit User</button>
                <button type="button" class="btn btn-danger" onclick="deleteUser()">Delete User</button>
            </div>
        </div>
    </div>
</div>

<script>
let usersData = [];
let filteredUsers = [];
let currentPage = 1;
let usersPerPage = 10;
let editingUserId = null;

// Load users data
document.addEventListener('DOMContentLoaded', function() {
    loadUsers();
});

function loadUsers() {
    new GetRequest({
        getUrl: 'controller/admin/users/get-all.php',
        params: {},
        showLoading: false,
        showSuccess: false,
        callback: (err, data) => {
            if (err) {
                console.error('Error loading users:', err);
                showError('Failed to load users data');
                return;
            }
            usersData = data || [];
            filteredUsers = [...usersData];
            renderUsersTable();
            renderPagination();
        }
    }).send();
}

function renderUsersTable() {
    const tbody = document.getElementById('users-table-body');
    const startIndex = (currentPage - 1) * usersPerPage;
    const endIndex = startIndex + usersPerPage;
    const pageUsers = filteredUsers.slice(startIndex, endIndex);

    if (pageUsers.length === 0) {
        tbody.innerHTML = '<tr><td colspan="10" class="text-center text-muted">No users found</td></tr>';
        return;
    }

    tbody.innerHTML = pageUsers.map(user => `
        <tr>
            <td><code>${user.user_id}</code></td>
            <td>
                <div class="d-flex align-items-center">
                    <div class="avatar-circle me-2" style="width: 32px; height: 32px;">
                        <span class="initial">${user.first_name.charAt(0).toUpperCase()}</span>
                    </div>
                    <div>
                        <div class="fw-semibold">${user.first_name} ${user.last_name}</div>
                        ${user.is_google_auth ? '<small class="text-muted">Google Auth</small>' : ''}
                    </div>
                </div>
            </td>
            <td>${user.email}</td>
            <td>
                <span class="badge bg-${getRoleBadgeClass(user.role)}">${getRoleDisplayName(user.role)}</span>
            </td>
            <td>
                <span class="badge bg-${user.is_active ? 'success' : 'danger'}">
                    ${user.is_active ? 'Active' : 'Inactive'}
                </span>
            </td>
            <td>
                <span class="badge bg-${user.is_email_verified ? 'success' : 'warning'}">
                    ${user.is_email_verified ? 'Verified' : 'Unverified'}
                </span>
            </td>
            <td>
                ${user.role === 'user' ? (user.store_count || 0) : '-'}
            </td>
            <td>${new Date(user.created_at).toLocaleDateString()}</td>
            <td>${user.last_login ? new Date(user.last_login).toLocaleDateString() : 'Never'}</td>
            <td>
                <div class="btn-group btn-group-sm">
                    <button class="btn btn-outline-primary" onclick="viewUser('${user.user_id}')" title="View Details">
                        <i class="fas fa-eye"></i>
                    </button>
                    <button class="btn btn-outline-warning" onclick="editUserModal('${user.user_id}')" title="Edit">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn btn-outline-danger" onclick="toggleUserStatus('${user.user_id}', ${user.is_active})" title="${user.is_active ? 'Deactivate' : 'Activate'}">
                        <i class="fas fa-${user.is_active ? 'ban' : 'check'}"></i>
                    </button>
                </div>
            </td>
        </tr>
    `).join('');
}

function renderPagination() {
    PaginationUtils.renderPagination(
        'users-pagination', 
        currentPage, 
        filteredUsers.length, 
        usersPerPage, 
        'changePage'
    );
}

function changePage(page) {
    if (PaginationUtils.validatePageChange(page, currentPage, filteredUsers.length, usersPerPage)) {
        currentPage = page;
        renderUsersTable();
        renderPagination();
    }
}

function filterUsers() {
    const roleFilter = document.getElementById('role-filter').value;
    const statusFilter = document.getElementById('status-filter').value;
    const searchTerm = document.getElementById('search-input').value.toLowerCase();

    filteredUsers = usersData.filter(user => {
        const matchesRole = !roleFilter || user.role === roleFilter;
        const matchesStatus = statusFilter === '' || user.is_active.toString() === statusFilter;
        const matchesSearch = !searchTerm || 
            user.first_name.toLowerCase().includes(searchTerm) ||
            user.last_name.toLowerCase().includes(searchTerm) ||
            user.email.toLowerCase().includes(searchTerm);

        return matchesRole && matchesStatus && matchesSearch;
    });

    currentPage = 1;
    renderUsersTable();
    renderPagination();
}

function clearFilters() {
    document.getElementById('role-filter').value = '';
    document.getElementById('status-filter').value = '';
    document.getElementById('search-input').value = '';
    filterUsers();
}

function getRoleBadgeClass(role) {
    const classes = {
        'user': 'primary',
        'supplier': 'success',
        'courier': 'warning',
        'admin': 'danger'
    };
    return classes[role] || 'secondary';
}

function getRoleDisplayName(role) {
    const names = {
        'user': 'Business Owner',
        'supplier': 'Supplier',
        'courier': 'Courier',
        'admin': 'Admin'
    };
    return names[role] || role;
}

function showAddUserModal() {
    editingUserId = null;
    document.getElementById('userModalLabel').textContent = 'Add New User';
    document.getElementById('user-form').reset();
    document.getElementById('password').required = true;
    document.getElementById('confirm_password').required = true;
    
    const modal = new bootstrap.Modal(document.getElementById('userModal'));
    modal.show();
}

function editUserModal(userId) {
    const user = usersData.find(u => u.user_id === userId);
    if (!user) return;

    editingUserId = userId;
    document.getElementById('userModalLabel').textContent = 'Edit User';
    
    // Populate form
    document.getElementById('first_name').value = user.first_name;
    document.getElementById('last_name').value = user.last_name;
    document.getElementById('email').value = user.email;
    document.getElementById('phone_number').value = user.phone_number || '';
    document.getElementById('role').value = user.role;
    document.getElementById('is_active').value = user.is_active;
    document.getElementById('birth_date').value = user.birth_date || '';
    document.getElementById('gender').value = user.gender || 'male';
    
    // Make password optional for editing
    document.getElementById('password').required = false;
    document.getElementById('confirm_password').required = false;
    
    const modal = new bootstrap.Modal(document.getElementById('userModal'));
    modal.show();
}

function viewUser(userId) {
    const user = usersData.find(u => u.user_id === userId);
    if (!user) return;

    const content = `
        <div class="row g-3">
            <div class="col-md-6">
                <label class="form-label fw-semibold">User ID</label>
                <p><code>${user.user_id}</code></p>
            </div>
            <div class="col-md-6">
                <label class="form-label fw-semibold">Role</label>
                <p><span class="badge bg-${getRoleBadgeClass(user.role)}">${getRoleDisplayName(user.role)}</span></p>
            </div>
            <div class="col-md-6">
                <label class="form-label fw-semibold">Name</label>
                <p>${user.first_name} ${user.last_name}</p>
            </div>
            <div class="col-md-6">
                <label class="form-label fw-semibold">Email</label>
                <p>${user.email}</p>
            </div>
            <div class="col-md-6">
                <label class="form-label fw-semibold">Phone</label>
                <p>${user.phone_number || 'Not provided'}</p>
            </div>
            <div class="col-md-6">
                <label class="form-label fw-semibold">Status</label>
                <p><span class="badge bg-${user.is_active ? 'success' : 'danger'}">${user.is_active ? 'Active' : 'Inactive'}</span></p>
            </div>
            <div class="col-md-6">
                <label class="form-label fw-semibold">Created</label>
                <p>${new Date(user.created_at).toLocaleString()}</p>
            </div>
            <div class="col-md-6">
                <label class="form-label fw-semibold">Last Updated</label>
                <p>${new Date(user.updated_at).toLocaleString()}</p>
            </div>
        </div>
    `;

    document.getElementById('user-details-content').innerHTML = content;
    editingUserId = userId;
    
    const modal = new bootstrap.Modal(document.getElementById('userDetailsModal'));
    modal.show();
}

function editUser() {
    if (editingUserId) {
        editUserModal(editingUserId);
        bootstrap.Modal.getInstance(document.getElementById('userDetailsModal')).hide();
    }
}

function deleteUser() {
    if (!editingUserId) return;

    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
        if (result.isConfirmed) {
            new PostRequest({
                postUrl: 'controller/admin/users/delete.php',
                params: { user_id: editingUserId },
                showLoading: true,
                showSuccess: true,
                callback: (err, data) => {
                    if (!err) {
                        loadUsers();
                        bootstrap.Modal.getInstance(document.getElementById('userDetailsModal')).hide();
                    }
                }
            }).send();
        }
    });
}

function toggleUserStatus(userId, currentStatus) {
    const action = currentStatus ? 'deactivate' : 'activate';
    
    Swal.fire({
        title: `${action.charAt(0).toUpperCase() + action.slice(1)} User?`,
        text: `Are you sure you want to ${action} this user?`,
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: currentStatus ? '#d33' : '#28a745',
        cancelButtonColor: '#6c757d',
        confirmButtonText: `Yes, ${action}!`
    }).then((result) => {
        if (result.isConfirmed) {
            new PostRequest({
                postUrl: 'controller/admin/users/toggle-status.php',
                params: { 
                    user_id: userId,
                    is_active: currentStatus ? 0 : 1
                },
                showLoading: true,
                showSuccess: true,
                callback: (err, data) => {
                    if (!err) {
                        loadUsers();
                    }
                }
            }).send();
        }
    });
}

function refreshUsers() {
    loadUsers();
}

function exportUsers(format) {
    const data = filteredUsers.map(user => ({
        'User ID': user.user_id,
        'Name': `${user.first_name} ${user.last_name}`,
        'Email': user.email,
        'Role': getRoleDisplayName(user.role),
        'Status': user.is_active ? 'Active' : 'Inactive',
        'Created': new Date(user.created_at).toLocaleDateString()
    }));

    if (format === 'csv') {
        const csv = convertToCSV(data);
        downloadCSV(csv, 'users.csv');
    } else if (format === 'pdf') {
        // PDF export would require additional library
        Swal.fire('Info', 'PDF export feature coming soon!', 'info');
    }
}

function convertToCSV(data) {
    if (data.length === 0) return '';
    
    const headers = Object.keys(data[0]);
    const csvContent = [
        headers.join(','),
        ...data.map(row => headers.map(header => `"${row[header]}"`).join(','))
    ].join('\n');
    
    return csvContent;
}

function downloadCSV(csv, filename) {
    const blob = new Blob([csv], { type: 'text/csv' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = filename;
    a.click();
    window.URL.revokeObjectURL(url);
}

// Handle form submission
new CreateRequest({
    formSelector: '#user-form',
    submitButtonSelector: '#save-user-btn',
    postUrl: 'api/admin/users/create.php',
    callback: (err, data) => {
        if (!err) {
            loadUsers();
            bootstrap.Modal.getInstance(document.getElementById('userModal')).hide();
        }
    }
});
</script>
